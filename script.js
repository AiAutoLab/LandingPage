// AI Chat functionality
const chatMessages = document.getElementById('chatMessages');
const chatInput = document.getElementById('chatInput');

// n8n webhook URL - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π URL
const N8N_WEBHOOK_URL = 'https://aiauton8n.ru/webhook/881e1f42-758b-461b-a6a0-6f0075bf0109';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ Markdown
function parseMarkdown(text) {
    return text
        // –ó–∞–≥–æ–ª–æ–≤–∫–∏
        .replace(/### (.*$)/gim, '<h3>$1</h3>')
        .replace(/## (.*$)/gim, '<h2>$1</h2>')
        .replace(/# (.*$)/gim, '<h1>$1</h1>')
        // –ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
        .replace(/\*\*(.*?)\*\*/gim, '<strong>$1</strong>')
        // –ö—É—Ä—Å–∏–≤
        .replace(/\*(.*?)\*/gim, '<em>$1</em>')
        // –°–ø–∏—Å–∫–∏
        .replace(/^\d+\. (.*$)/gim, '<li>$1</li>')
        .replace(/^- (.*$)/gim, '<li>$1</li>')
        // –ü–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
        .replace(/\n/gim, '<br>');
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ session_id –¥–ª—è –ø–∞–º—è—Ç–∏ n8n
function getSessionId() {
    let sessionId = localStorage.getItem('n8n_session_id');
    if (!sessionId) {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π session_id
        sessionId = 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
        localStorage.setItem('n8n_session_id', sessionId);
    }
    return sessionId;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ n8n –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
async function sendToN8N(message) {
    try {
        const sessionId = getSessionId();
        
        const response = await fetch(N8N_WEBHOOK_URL, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                message: message,
                session_id: sessionId,
                timestamp: new Date().toISOString(),
                source: 'website_chat'
            })
        });
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç n8n
        let aiResponse;
        
        if (Array.isArray(data) && data.length > 0) {
            // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç - –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
            aiResponse = data[0].output || data[0].response || data[0].message;
        } else if (data.output) {
            // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç - –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º output
            aiResponse = data.output;
        } else if (data.response) {
            // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç - –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º response
            aiResponse = data.response;
        } else if (data.message) {
            // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç - –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–µ–º message
            aiResponse = data.message;
        } else {
            // –ï—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞, –ø–æ–ø—Ä–æ–±—É–µ–º –≤–∑—è—Ç—å –≤–µ—Å—å –æ–±—ä–µ–∫—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
            aiResponse = typeof data === 'string' ? data : JSON.stringify(data);
        }
        
        return aiResponse || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò –∞–≥–µ–Ω—Ç–∞.';
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ n8n:', error);
        return '–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.';
    }
}

// Fallback –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ n8n
const fallbackResponses = {
    '–ø—Ä–æ–¥–∞–∂–∏': '–ò–ò –∞–≥–µ–Ω—Ç—ã –º–æ–≥—É—Ç —É–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ 40-60% –∑–∞ —Å—á–µ—Ç: üéØ –ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–∏–¥–æ–≤ 24/7 üìû –û–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π üìà –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ follow-up',
    '—Å—Ç–æ–∏–º–æ—Å—Ç—å': '–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò —Ä–µ—à–µ–Ω–∏–π –æ—Ç 150 000‚ÇΩ. –û–∫—É–ø–∞–µ–º–æ—Å—Ç—å 3-6 –º–µ—Å—è—Ü–µ–≤. üí∞ ROI –¥–æ 300% –≤ –ø–µ—Ä–≤—ã–π –≥–æ–¥ üìä –≠–∫–æ–Ω–æ–º–∏—è –Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞—Ö –¥–æ 1–ú‚ÇΩ/–≥–æ–¥ ‚ö° –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ 2-3 —Ä–∞–∑–∞',
    '—Å—Ä–æ–∫–∏': '–°—Ä–æ–∫–∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏: üìÖ –ê–Ω–∞–ª–∏–∑ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: 1-2 –Ω–µ–¥–µ–ª–∏ üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: 2-4 –Ω–µ–¥–µ–ª–∏ üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫: 1 –Ω–µ–¥–µ–ª—è üìö –û–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: 3-5 –¥–Ω–µ–π',
    '–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è': '–ò–ò –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–∞–µ—Ç: ü§ñ –û–±—Ä–∞–±–æ—Ç–∫—É –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞—è–≤–æ–∫ üìß Email –∏ SMS —Ä–∞—Å—Å—ã–ª–∫–∏ üìû –¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∏ üìä –ê–Ω–∞–ª–∏—Ç–∏–∫—É –∏ –æ—Ç—á–µ—Ç—ã üîÑ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å CRM',
    '–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞': '–ì–ª–∞–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ò–ò: ‚è∞ –≠–∫–æ–Ω–æ–º–∏—è 60+ —á–∞—Å–æ–≤ –≤ –º–µ—Å—è—Ü üí∞ –°–Ω–∏–∂–µ–Ω–∏–µ –∑–∞—Ç—Ä–∞—Ç –Ω–∞ 40% üöÄ –†–æ—Å—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤ 2.5 —Ä–∞–∑–∞ üéØ –†–∞–±–æ—Ç–∞ 24/7 –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö üìà –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å –±–∏–∑–Ω–µ—Å–∞',
    'default': '–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ò–ò –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç: ‚úÖ –£–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ ‚úÖ –°–Ω–∏–∑–∏—Ç—å –∑–∞—Ç—Ä–∞—Ç—ã ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—É—Ç–∏–Ω—É ‚úÖ –£–ª—É—á—à–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ä–µ—à–µ–Ω–∏–∏?'
};

function getFallbackResponse(message) {
    const lowerMessage = message.toLowerCase();
    
    for (const [key, response] of Object.entries(fallbackResponses)) {
        if (lowerMessage.includes(key)) {
            return response;
        }
    }
    
    return fallbackResponses.default;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
function addMessage(content, isUser = false) {
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${isUser ? 'user-message' : 'ai-message'}`;
    
    const now = new Date();
    const timeString = now.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º Markdown —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –ò–ò
    const processedContent = isUser ? content : parseMarkdown(content);
    
    messageDiv.innerHTML = `
        <div class="message-content">${processedContent}</div>
        <div class="message-time">${timeString}</div>
    `;
    
    chatMessages.appendChild(messageDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∏
function showTypingIndicator() {
    const typingDiv = document.createElement('div');
    typingDiv.className = 'message ai-message typing-indicator';
    typingDiv.id = 'typing-indicator';
    
    const now = new Date();
    const timeString = now.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });
    
    typingDiv.innerHTML = `
        <div class="message-content">
            <div class="typing-dots">
                <span></span>
                <span></span>
                <span></span>
            </div>
            –ò–ò –∞–≥–µ–Ω—Ç –ø–µ—á–∞—Ç–∞–µ—Ç...
        </div>
        <div class="message-time">${timeString}</div>
    `;
    
    chatMessages.appendChild(typingDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

function removeTypingIndicator() {
    const typingIndicator = document.getElementById('typing-indicator');
    if (typingIndicator) {
        typingIndicator.remove();
    }
}

async function sendMessage() {
    const message = chatInput.value.trim();
    if (!message) return;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    addMessage(message, true);
    chatInput.value = '';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    showTypingIndicator();
    
    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ n8n
        const aiResponse = await sendToN8N(message);
        
        // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
        removeTypingIndicator();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ò–ò
        addMessage(aiResponse);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞:', error);
        
        // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
        removeTypingIndicator();
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –æ—Ç–≤–µ—Ç
        const fallbackResponse = getFallbackResponse(message);
        addMessage(fallbackResponse);
    }
}

function askQuestion(question) {
    chatInput.value = question;
    sendMessage();
}

// Enter key support
chatInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        sendMessage();
    }
});

// Smooth scrolling
function scrollToChat() {
    document.getElementById('chat').scrollIntoView({ behavior: 'smooth' });
}

function scrollToContact() {
    document.getElementById('contact').scrollIntoView({ behavior: 'smooth' });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫—Ä–∞—Å–∏–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
function showSuccessModal() {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'success-modal';
    modal.innerHTML = `
        <div class="success-modal-content">
            <div class="success-icon"></div>
            <h3 class="success-title">–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</h3>
            <p class="success-message">–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.</p>
            <button class="success-close-btn" onclick="closeSuccessModal()">–ü–æ–Ω—è—Ç–Ω–æ</button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ DOM
    document.body.appendChild(modal);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    setTimeout(() => {
        modal.classList.add('show');
    }, 10);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ —Ñ–æ–Ω
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            closeSuccessModal();
        }
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeSuccessModal();
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeSuccessModal() {
    const modal = document.querySelector('.success-modal');
    if (modal) {
        modal.classList.remove('show');
        setTimeout(() => {
            modal.remove();
        }, 300);
    }
}

// Contact form submission
function submitForm(event) {
    event.preventDefault();
    
    const submitButton = event.target.querySelector('button[type="submit"]');
    const originalText = submitButton.textContent;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...';
    submitButton.disabled = true;
    submitButton.classList.add('btn-loading');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EmailJS (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏)
    emailjs.init('sBuMaqoD5p9XWhFrn'); // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Public Key
    
    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const templateParams = {
        from_name: event.target.name.value,
        from_email: event.target.email.value,
        phone: event.target.phone.value,
        company: event.target.company.value || '–ù–µ —É–∫–∞–∑–∞–Ω–∞',
        message: event.target.message.value || '–ó–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é',
        to_email: 'kirillkhaev6391@gmail.com' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É
    };
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ EmailJS
    emailjs.send('service_83x8gpn', 'template_7t45ibm', templateParams) // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ ID
        .then(function(response) {
            console.log('SUCCESS!', response.status, response.text);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ alert
            showSuccessModal();
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
            event.target.reset();
        })
        .catch(function(error) {
            console.error('FAILED...', error);
            
            // –î–ª—è –æ—à–∏–±–æ–∫ –ø–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º alert (–º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ —Å–¥–µ–ª–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ)
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.');
        })
        .finally(function() {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            submitButton.textContent = originalText;
            submitButton.disabled = false;
            submitButton.classList.remove('btn-loading');
        });
}

// Smooth scroll for navigation links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            target.scrollIntoView({ behavior: 'smooth' });
        }
    });
});

// Add scroll effect to header
window.addEventListener('scroll', function() {
    const header = document.querySelector('.header');
    if (window.scrollY > 100) {
        header.style.background = 'rgba(255, 255, 255, 0.98)';
    } else {
        header.style.background = 'rgba(255, 255, 255, 0.95)';
    }
});


// Calculator functionality
function updateCalculator() {
    const employees = document.getElementById('employees').value;
    const avgSalary = document.getElementById('avgSalary').value;
    const automationPercent = document.getElementById('automationPercent').value;
    const timeReduction = document.getElementById('timeReduction').value;
    
    // Update display values
    document.getElementById('employeesValue').textContent = employees;
    document.getElementById('avgSalaryValue').textContent = formatNumber(avgSalary);
    document.getElementById('automationPercentValue').textContent = automationPercent + '%';
    document.getElementById('timeReductionValue').textContent = timeReduction + '%';
    
    // Calculate savings
    const affectedEmployees = Math.round(employees * (automationPercent / 100));
    const timeReductionDecimal = timeReduction / 100;
    const monthlySavingsPerEmployee = (avgSalary * timeReductionDecimal);
    const totalMonthlySavings = Math.round(affectedEmployees * monthlySavingsPerEmployee);
    const yearlySavings = totalMonthlySavings * 12;
    
    // Calculate time saved (assuming 160 working hours per month)
    const timeSavedHours = Math.round(affectedEmployees * 160 * timeReductionDecimal);
    
    // Calculate ROI (assuming implementation cost is 2 months of savings)
    const implementationCost = totalMonthlySavings * 2;
    const roi = Math.round(((yearlySavings - implementationCost) / implementationCost) * 100);
    
    // Update results
    document.getElementById('monthlySavings').textContent = formatNumber(totalMonthlySavings) + ' ‚ÇΩ';
    document.getElementById('yearlySavings').textContent = formatNumber(yearlySavings) + ' ‚ÇΩ';
    document.getElementById('timeSaved').textContent = formatNumber(timeSavedHours) + ' —á–∞—Å–æ–≤/–º–µ—Å';
    document.getElementById('roiValue').textContent = roi + '%';
    
    // Update range slider backgrounds
    updateSliderBackground('employees', employees, 5, 500);
    updateSliderBackground('avgSalary', avgSalary, 30000, 200000);
    updateSliderBackground('automationPercent', automationPercent, 10, 80);
    updateSliderBackground('timeReduction', timeReduction, 20, 90);
}

function updateSliderBackground(sliderId, value, min, max) {
    const slider = document.getElementById(sliderId);
    const percentage = ((value - min) / (max - min)) * 100;
    slider.style.background = `linear-gradient(to right, #3b82f6 0%, #3b82f6 ${percentage}%, #e2e8f0 ${percentage}%, #e2e8f0 100%)`;
}

function formatNumber(num) {
    return new Intl.NumberFormat('ru-RU').format(num);
}

// Initialize calculator on page load
document.addEventListener('DOMContentLoaded', function() {
    updateCalculator();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–µ—Å—Å–∏–∏ (–æ—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏)
function resetChatSession() {
    localStorage.removeItem('n8n_session_id');
    // –û—á–∏—â–∞–µ–º —á–∞—Ç
    const chatMessages = document.getElementById('chatMessages');
    chatMessages.innerHTML = `
        <div class="message ai-message">
            <div class="message-content">
                –ü—Ä–∏–≤–µ—Ç! –Ø –ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –†–∞—Å—Å–∫–∞–∂—É –∫–∞–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç –≤–∞—à–µ–º—É –±–∏–∑–Ω–µ—Å—É. –û —á–µ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?
            </div>
            <div class="message-time">–°–µ–π—á–∞—Å</div>
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ session_id (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
function getCurrentSessionId() {
    return localStorage.getItem('n8n_session_id');
}